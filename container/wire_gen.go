// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package container

import (
	"github.com/google/wire"
	"github.com/reyhanfahlevi/soap-absence/config"
	absence2 "github.com/reyhanfahlevi/soap-absence/resource/absence"
	"github.com/reyhanfahlevi/soap-absence/service/absence"
	"github.com/tokopedia/affiliate/pkg/httpclient"
	"github.com/tokopedia/affiliate/pkg/safesql"
)

// Injectors from wire.go:

func InitializeAbsenceService(address ...string) (*absence.Service, error) {
	client := HttpClientProvider()
	masterDB, err := MasterDBProvider()
	if err != nil {
		return nil, err
	}
	slaveDB, err := SlaveDBProvider()
	if err != nil {
		return nil, err
	}
	resource := absence2.New(client, masterDB, slaveDB, address...)
	service := absence.New(resource)
	return service, nil
}

// wire.go:

var ResourceProvider = wire.NewSet(absence2.New, wire.Bind(new(absence.Resource), new(absence2.Resource)))

// MasterDBProvider master db provider
func MasterDBProvider() (safesql.MasterDB, error) {
	conf := config.Get()
	return safesql.OpenMasterDB("mysql", conf.DB.Master)
}

// SlaveDBProvider slave db provider
func SlaveDBProvider() (safesql.SlaveDB, error) {
	conf := config.Get()
	return safesql.OpenSlaveDB("mysql", conf.DB.Slave)
}

// HttpClientProvider http client provider
func HttpClientProvider() *httpclient.Client {
	return httpclient.NewClient()
}
